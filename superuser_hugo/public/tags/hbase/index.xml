<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hbase on Superuser</title>
    <link>https://example.org/tags/hbase/</link>
    <description>Recent content in Hbase on Superuser</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 18 Nov 2017 11:26:20 +0000</lastBuildDate>
    <atom:link href="https://example.org/tags/hbase/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Upgrading Apache Phoenix in HDP Cluster</title>
      <link>https://example.org/posts/2017-11-18-upgrading-apache-phoenix-hdp/</link>
      <pubDate>Sat, 18 Nov 2017 11:26:20 +0000</pubDate>
      <guid>https://example.org/posts/2017-11-18-upgrading-apache-phoenix-hdp/</guid>
      <description>About new Hadoop cluster we set up, the phoenix version bundled with HDP distribution(4.7) had some bugs which would make it impossible to use to run BI queries. There was no way provided by HDP to upgrade phoenix as we were using the latest version. Looking around on the internet, I found that manually we can replace the related jars and bins to have a new version in place.
So that&amp;rsquo;s what I tried.</description>
    </item>
    <item>
      <title>HBase YouAreDeadException: Dead RegionServer due to GC Pause</title>
      <link>https://example.org/posts/2017-05-26-hbase-dead-regionserver/</link>
      <pubDate>Fri, 26 May 2017 17:24:15 +0000</pubDate>
      <guid>https://example.org/posts/2017-05-26-hbase-dead-regionserver/</guid>
      <description>So the CDH Cluster was replaced by HDP Cluster and everything was going smooth for time being. Until the time when I started getting a dead RegionServer. Frequently. So a deep dive was needed to dig out what indeed was happening. And it turned out to be a long dive.
The following was the logline:
2017-05-23 06:59:22,173 FATAL [regionserver/&amp;lt;hostname&amp;gt;/10.10.205.55:16020] regionserver.HRegionServer: ABORTING region server &amp;lt;hostname&amp;gt;,16020,1493962926376: org.apache.hadoop.hbase.YouAreDeadException: Server REPORT rejected; currently processing&amp;lt;hostname&amp;gt;,16020,1493962926376 as dead server This alone did not tell much.</description>
    </item>
    <item>
      <title>Migrating OpenTSDB to Another HBase Cluster</title>
      <link>https://example.org/posts/2017-04-24-migrate-opentsdb-hbase/</link>
      <pubDate>Mon, 24 Apr 2017 22:52:16 +0000</pubDate>
      <guid>https://example.org/posts/2017-04-24-migrate-opentsdb-hbase/</guid>
      <description>As a part of migration from CDH cluster to HDP cluster, we also had to migrate OpenTSDB which was running on CDH cluster. There are many methods to copy/transfer data between clusters and what we used here was ExportSnapshot.
So these are the steps roughly:
Stop TSDs Take snapshot(s) Transfer snapshots Restore snapshots Modify and start TSDs Steps 1 and 5 are self understood. We will look at how to take,transfer and restore snapshots.</description>
    </item>
    <item>
      <title>Stuff You Can Do While Tuning HBase</title>
      <link>https://example.org/posts/2017-04-09-tuning-hbase/</link>
      <pubDate>Sun, 09 Apr 2017 23:42:31 +0000</pubDate>
      <guid>https://example.org/posts/2017-04-09-tuning-hbase/</guid>
      <description>So you are setting up HBase! Congratulations!
When it comes to tuning HBase there are so many things you can do. And most of the things will be dependent upon type of data you will be storing and it&amp;rsquo;s access patterns. So I will be saying this a lot: &amp;lsquo;value of this parameter depends upon your workload&amp;rsquo;. Here I will try to enlist some of the variables that you can tweak while tuning hbase.</description>
    </item>
    <item>
      <title>HBase Benchmarking</title>
      <link>https://example.org/posts/2017-03-05-hbase-benchmarking/</link>
      <pubDate>Sun, 05 Mar 2017 22:28:23 +0000</pubDate>
      <guid>https://example.org/posts/2017-03-05-hbase-benchmarking/</guid>
      <description>Currently I am working with new setup of Apache HBase cluster to query data using Phoenix on top of HDP Distribution. After setting up cluster, the values for heap, cache and timeouts were all defaults. Now I needed to know how good is the cluster in current shape and how can it be improved. Now for the improvement part, understanding of HBase internals is needed. How does a write work in HBase.</description>
    </item>
  </channel>
</rss>
